chrome.contextMenus.create({id:"Wei to Eth",title:"Wei to Eth",contexts:["selection"]}),chrome.contextMenus.create({id:"Hex Converter",title:"Hex Converter",contexts:["selection"]}),chrome.contextMenus.onClicked.addListener(function(e){if("Wei to Eth"===e.menuItemId){let t=e.selectionText;console.log(t),chrome.storage.local.set({selectedStr:t,conversionType:"wei"})}}),chrome.contextMenus.onClicked.addListener(function(e){if("Hex Converter"===e.menuItemId){let t=e.selectionText;chrome.storage.local.set({selectedStr:t,selectedConversionType:"hex"})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJtYXBwaW5ncyI6IkFDQUEsT0FBTyxZQUFBLENBQWEsTUFBQSxDQUFPLENBQ3ZCLEdBQUksYUFDSixNQUFPLGFBQ1AsU0FBVSxDQUFDLFlBQVksQUFDM0IsR0FFQSxPQUFPLFlBQUEsQ0FBYSxNQUFBLENBQU8sQ0FDdkIsR0FBSSxnQkFDSixNQUFPLGdCQUNQLFNBQVUsQ0FBQyxZQUFZLEFBQzNCLEdBQ0EsT0FBTyxZQUFBLENBQWEsU0FBQSxDQUFVLFdBQUEsQ0FBWSxTQUFVLENBQUksRUFDcEQsR0FBSSxBQUFvQixlQUFwQixFQUFLLFVBQUEsQ0FBNkIsQ0FDbEMsSUFBTSxFQUFlLEVBQUssYUFBMUIsQ0FDQSxRQUFRLEdBQUEsQ0FBSSxHQUNaLE9BQU8sT0FBQSxDQUFRLEtBQUEsQ0FBTSxHQUFBLENBQUksQ0FDckIsWUFBYSxFQUNiLGVBQWdCLEtBQ3BCLEVBQ0osQ0FDSixHQUVBLE9BQU8sWUFBQSxDQUFhLFNBQUEsQ0FBVSxXQUFBLENBQVksU0FBVSxDQUFJLEVBQ3BELEdBQUksQUFBb0Isa0JBQXBCLEVBQUssVUFBQSxDQUFnQyxDQUNyQyxJQUFNLEVBQWUsRUFBSyxhQUExQixDQUNBLE9BQU8sT0FBQSxDQUFRLEtBQUEsQ0FBTSxHQUFBLENBQUksQ0FDckIsWUFBYSxFQUNiLHVCQUF3QixLQUM1QixFQUNKLENBQ0oiLCJzb3VyY2VzIjpbIjxhbm9uPiIsInNyYy9iYWNrZ3JvdW5kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIigoKSA9PiB7XG52YXIgJDE3NjdmNDFlNGFmY2UzMDQkZXhwb3J0cyA9IHt9O1xuY2hyb21lLmNvbnRleHRNZW51cy5jcmVhdGUoe1xuICAgIGlkOiBcIldlaSB0byBFdGhcIixcbiAgICB0aXRsZTogXCJXZWkgdG8gRXRoXCIsXG4gICAgY29udGV4dHM6IFtcbiAgICAgICAgXCJzZWxlY3Rpb25cIlxuICAgIF1cbn0pO1xuY2hyb21lLmNvbnRleHRNZW51cy5jcmVhdGUoe1xuICAgIGlkOiBcIkhleCBDb252ZXJ0ZXJcIixcbiAgICB0aXRsZTogXCJIZXggQ29udmVydGVyXCIsXG4gICAgY29udGV4dHM6IFtcbiAgICAgICAgXCJzZWxlY3Rpb25cIlxuICAgIF1cbn0pO1xuY2hyb21lLmNvbnRleHRNZW51cy5vbkNsaWNrZWQuYWRkTGlzdGVuZXIoZnVuY3Rpb24oaW5mbykge1xuICAgIGlmIChpbmZvLm1lbnVJdGVtSWQgPT09IFwiV2VpIHRvIEV0aFwiKSB7XG4gICAgICAgIGNvbnN0IHByZUNvbnZlcnRlZCA9IGluZm8uc2VsZWN0aW9uVGV4dDtcbiAgICAgICAgY29uc29sZS5sb2cocHJlQ29udmVydGVkKTtcbiAgICAgICAgY2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KHtcbiAgICAgICAgICAgIHNlbGVjdGVkU3RyOiBwcmVDb252ZXJ0ZWQsXG4gICAgICAgICAgICBjb252ZXJzaW9uVHlwZTogXCJ3ZWlcIlxuICAgICAgICB9KTtcbiAgICB9XG59KTtcbmNocm9tZS5jb250ZXh0TWVudXMub25DbGlja2VkLmFkZExpc3RlbmVyKGZ1bmN0aW9uKGluZm8pIHtcbiAgICBpZiAoaW5mby5tZW51SXRlbUlkID09PSBcIkhleCBDb252ZXJ0ZXJcIikge1xuICAgICAgICBjb25zdCBwcmVDb252ZXJ0ZWQgPSBpbmZvLnNlbGVjdGlvblRleHQ7XG4gICAgICAgIGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7XG4gICAgICAgICAgICBzZWxlY3RlZFN0cjogcHJlQ29udmVydGVkLFxuICAgICAgICAgICAgc2VsZWN0ZWRDb252ZXJzaW9uVHlwZTogXCJoZXhcIlxuICAgICAgICB9KTtcbiAgICB9XG59KTtcblxufSkoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUp0WVhCd2FXNW5jeUk2SWpzN1FVRkJRU3hQUVVGUExHRkJRV0VzVDBGQlR6dEpRVU4yUWl4SlFVRkpPMGxCUTBvc1QwRkJUenRKUVVOUUxGVkJRVlU3VVVGQlF6dExRVUZaTzBGQlF6TkNPMEZCUlVFc1QwRkJUeXhoUVVGaExFOUJRVTg3U1VGRGRrSXNTVUZCU1R0SlFVTktMRTlCUVU4N1NVRkRVQ3hWUVVGVk8xRkJRVU03UzBGQldUdEJRVU16UWp0QlFVTkJMRTlCUVU4c1lVRkJZU3hWUVVGVkxGbEJRVmtzVTBGQlZTeEpRVUZKTzBsQlEzQkVMRWxCUVVrc1MwRkJTeXhsUVVGbExHTkJRV003VVVGRGJFTXNUVUZCVFN4bFFVRmxMRXRCUVVzN1VVRkRNVUlzVVVGQlVTeEpRVUZKTzFGQlExb3NUMEZCVHl4UlFVRlJMRTFCUVUwc1NVRkJTVHRaUVVOeVFpeGhRVUZoTzFsQlEySXNaMEpCUVdkQ08xRkJRM0JDTzBsQlEwbzdRVUZEU2p0QlFVVkJMRTlCUVU4c1lVRkJZU3hWUVVGVkxGbEJRVmtzVTBGQlZTeEpRVUZKTzBsQlEzQkVMRWxCUVVrc1MwRkJTeXhsUVVGbExHbENRVUZwUWp0UlFVTnlReXhOUVVGTkxHVkJRV1VzUzBGQlN6dFJRVU14UWl4UFFVRlBMRkZCUVZFc1RVRkJUU3hKUVVGSk8xbEJRM0pDTEdGQlFXRTdXVUZEWWl4M1FrRkJkMEk3VVVGRE5VSTdTVUZEU2p0QlFVTktJaXdpYzI5MWNtTmxjeUk2V3lKemNtTXZZbUZqYTJkeWIzVnVaQzVxY3lKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmphSEp2YldVdVkyOXVkR1Y0ZEUxbGJuVnpMbU55WldGMFpTaDdYRzRnSUNBZ2FXUTZJQ2RYWldrZ2RHOGdSWFJvSnl4Y2JpQWdJQ0IwYVhSc1pUb2dKMWRsYVNCMGJ5QkZkR2duTEZ4dUlDQWdJR052Ym5SbGVIUnpPaUJiSjNObGJHVmpkR2x2YmlkZExGeHVmU2xjYmx4dVkyaHliMjFsTG1OdmJuUmxlSFJOWlc1MWN5NWpjbVZoZEdVb2UxeHVJQ0FnSUdsa09pQW5TR1Y0SUVOdmJuWmxjblJsY2ljc1hHNGdJQ0FnZEdsMGJHVTZJQ2RJWlhnZ1EyOXVkbVZ5ZEdWeUp5eGNiaUFnSUNCamIyNTBaWGgwY3pvZ1d5ZHpaV3hsWTNScGIyNG5YU3hjYm4wcFhHNWphSEp2YldVdVkyOXVkR1Y0ZEUxbGJuVnpMbTl1UTJ4cFkydGxaQzVoWkdSTWFYTjBaVzVsY2lobWRXNWpkR2x2YmlBb2FXNW1ieWtnZTF4dUlDQWdJR2xtSUNocGJtWnZMbTFsYm5WSmRHVnRTV1FnUFQwOUlDZFhaV2tnZEc4Z1JYUm9KeWtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J3Y21WRGIyNTJaWEowWldRZ1BTQnBibVp2TG5ObGJHVmpkR2x2YmxSbGVIUmNiaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvY0hKbFEyOXVkbVZ5ZEdWa0tWeHVJQ0FnSUNBZ0lDQmphSEp2YldVdWMzUnZjbUZuWlM1c2IyTmhiQzV6WlhRb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1pXTjBaV1JUZEhJNklIQnlaVU52Ym5abGNuUmxaQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiblpsY25OcGIyNVVlWEJsT2lBbmQyVnBKeXhjYmlBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0I5WEc1OUtWeHVYRzVqYUhKdmJXVXVZMjl1ZEdWNGRFMWxiblZ6TG05dVEyeHBZMnRsWkM1aFpHUk1hWE4wWlc1bGNpaG1kVzVqZEdsdmJpQW9hVzVtYnlrZ2UxeHVJQ0FnSUdsbUlDaHBibVp2TG0xbGJuVkpkR1Z0U1dRZ1BUMDlJQ2RJWlhnZ1EyOXVkbVZ5ZEdWeUp5a2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQndjbVZEYjI1MlpYSjBaV1FnUFNCcGJtWnZMbk5sYkdWamRHbHZibFJsZUhSY2JpQWdJQ0FnSUNBZ1kyaHliMjFsTG5OMGIzSmhaMlV1Ykc5allXd3VjMlYwS0h0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE5sYkdWamRHVmtVM1J5T2lCd2NtVkRiMjUyWlhKMFpXUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCelpXeGxZM1JsWkVOdmJuWmxjbk5wYjI1VWVYQmxPaUFuYUdWNEp5eGNiaUFnSUNBZ0lDQWdmU2xjYmlBZ0lDQjlYRzU5S1Z4dUlsMHNJbTVoYldWeklqcGJYU3dpZG1WeWMybHZiaUk2TXl3aVptbHNaU0k2SW1KaFkydG5jbTkxYm1RdVNFRlRTRjlTUlVaZk0yWmhPREZqTkdSbU9HSXpPV1ppTmk1cWN5NXRZWEFpZlE9PVxuIiwiY2hyb21lLmNvbnRleHRNZW51cy5jcmVhdGUoe1xuICAgIGlkOiAnV2VpIHRvIEV0aCcsXG4gICAgdGl0bGU6ICdXZWkgdG8gRXRoJyxcbiAgICBjb250ZXh0czogWydzZWxlY3Rpb24nXSxcbn0pXG5cbmNocm9tZS5jb250ZXh0TWVudXMuY3JlYXRlKHtcbiAgICBpZDogJ0hleCBDb252ZXJ0ZXInLFxuICAgIHRpdGxlOiAnSGV4IENvbnZlcnRlcicsXG4gICAgY29udGV4dHM6IFsnc2VsZWN0aW9uJ10sXG59KVxuY2hyb21lLmNvbnRleHRNZW51cy5vbkNsaWNrZWQuYWRkTGlzdGVuZXIoZnVuY3Rpb24gKGluZm8pIHtcbiAgICBpZiAoaW5mby5tZW51SXRlbUlkID09PSAnV2VpIHRvIEV0aCcpIHtcbiAgICAgICAgY29uc3QgcHJlQ29udmVydGVkID0gaW5mby5zZWxlY3Rpb25UZXh0XG4gICAgICAgIGNvbnNvbGUubG9nKHByZUNvbnZlcnRlZClcbiAgICAgICAgY2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KHtcbiAgICAgICAgICAgIHNlbGVjdGVkU3RyOiBwcmVDb252ZXJ0ZWQsXG4gICAgICAgICAgICBjb252ZXJzaW9uVHlwZTogJ3dlaScsXG4gICAgICAgIH0pXG4gICAgfVxufSlcblxuY2hyb21lLmNvbnRleHRNZW51cy5vbkNsaWNrZWQuYWRkTGlzdGVuZXIoZnVuY3Rpb24gKGluZm8pIHtcbiAgICBpZiAoaW5mby5tZW51SXRlbUlkID09PSAnSGV4IENvbnZlcnRlcicpIHtcbiAgICAgICAgY29uc3QgcHJlQ29udmVydGVkID0gaW5mby5zZWxlY3Rpb25UZXh0XG4gICAgICAgIGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7XG4gICAgICAgICAgICBzZWxlY3RlZFN0cjogcHJlQ29udmVydGVkLFxuICAgICAgICAgICAgc2VsZWN0ZWRDb252ZXJzaW9uVHlwZTogJ2hleCcsXG4gICAgICAgIH0pXG4gICAgfVxufSlcbiJdLCJuYW1lcyI6WyJjaHJvbWUiLCJjb250ZXh0TWVudXMiLCJjcmVhdGUiLCJpZCIsInRpdGxlIiwiY29udGV4dHMiLCJvbkNsaWNrZWQiLCJhZGRMaXN0ZW5lciIsImluZm8iLCJtZW51SXRlbUlkIiwicHJlQ29udmVydGVkIiwic2VsZWN0aW9uVGV4dCIsImNvbnNvbGUiLCJsb2ciLCJzdG9yYWdlIiwibG9jYWwiLCJzZXQiLCJzZWxlY3RlZFN0ciIsImNvbnZlcnNpb25UeXBlIiwic2VsZWN0ZWRDb252ZXJzaW9uVHlwZSJdLCJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2dyb3VuZC5IQVNIX1JFRl8zZmE4MWM0ZGY4YjM5ZmI2LmpzLm1hcCJ9
